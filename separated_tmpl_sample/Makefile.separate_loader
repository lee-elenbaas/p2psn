LIBS=-lcppcms -lbooster
OPTIONS=-O0 -Wall -Wextra -std=c++0x -g3 -rdynamic
#CPPCMS_TMPL_CC=cppcms_tmpl_cc
CPPCMS_TMPL_CC=tools/cppcms_tmpl_cc

all: run

.PHONY: all clean run

# rules for generating files

# copy build result to run folder
run/%: build/%
	-rm $@
	mkdir -p $@
	-rmdir $@
	cp $< $@

#copy files from src to build
build/%: src/%
	mkdir -p build
	cp -r src/* build/

# generate object files
%.o: %.cpp

build/%.o: build/%.cpp
	$(CXX) $(OPTIONS) -c $< $(LIBS)
	mv *.o $@

build/%.cpp: build/%.tmpl
	$(CPPCMS_TMPL_CC) --code $@ --header "build/$*.h" --no-loader $^

# dependancies
build/targeted.cpp build/targeted.h: build/targeted.tmpl
build/derived.cpp build/derived.h: build/derived.tmpl
build/base.cpp build/base.h: build/base.tmpl

build/targeted.o: build/targeted.cpp build/targeted.h build/base.h build/content.h
build/derived.o: build/derived.cpp build/derived.h build/base.h build/content.h
build/base.o: build/base.cpp build/base.h build/content.h
build/separated-tmpl-sample.o: build/separated-tmpl-sample.cpp build/content.h

#Clean up	
clean:
	rm -fr run cppcms_rundir build
	-rmdir run
	-rmdir build
	find . -type f -name "*~" | xargs rm -f
	find . -type f -name "*.gch" | xargs rm -f

#run
run: run/separated-tmpl-sample run/config.js
	run/separated-tmpl-sample -c run/config.js

#sample app

build/separated-tmpl-sample:	\
		build/separated-tmpl-sample.o \
		build/base.o \
		build/derived.o \
		build/targeted.o \
		build/loader.o
	$(CXX) $(OPTIONS) $^ -o $@ $(LIBS)

